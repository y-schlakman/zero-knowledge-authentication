#include "BigNumber.h"

#define SPORT 115200
#define HS_PHRASE "hello"
#define HS_ANSWER "world"
#define FFS_CHALLENGE "what is x?"
#define FFS_AS "here are a:"
#define FFS_Y "what is y?"
#define AUTH "granted"
#define VECTOR_LENGTH 4

char * img = "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";
BigNumber * secrets;
BigNumber n = NULL;
void setup()
{
  Serial.begin(SPORT);
  Serial.setTimeout(1000*10);
  BigNumber::begin();
  handShake();
  secrets = new BigNumber[VECTOR_LENGTH]{BigNumber("1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"), BigNumber("213661002"), BigNumber("332521103"), BigNumber("164830184628194")};
  n = BigNumber("4212891246770037487109422027704058175907213320692993701696036000367904139927366785088915978901533871755063402826257411290690100565786489323341079195880910274865189337177409652005591121491827637966015955436537613577857840678161449047482560365053266448205785082037826407654032316444549593497942951026814756179444467256199324684045453673017884616967001166443931405923317172126073185624223458394964958878975248258810924503498774677737223194594390680485730096725257097387226471221071129405554280488709016232406553447464129650229019583872898289843015697727333103779640051708823836936370603195656769035123142831522051334729");
}

void loop()
{
  String input = getInput();
  if(input == FFS_CHALLENGE)
    ffs();
  if(input == AUTH)
  {
    Serial.println(img);
  }
}

String getInput()
{
  return Serial.readStringUntil('\n');
}

void printBN(BigNumber bn)
{
  char *buf = bn.toString();
  Serial.println(buf);
  free(buf);
}

void handShake()
{
  //Serial.println("waiting for handshake...");//DEBUG
  while(true)
  {
    String input = getInput();
    if(input == HS_PHRASE)
    {
      Serial.println(HS_ANSWER);
      break;
    }
  }
  //Serial.println("handshake complete");//DEBUG
}

int ffs()
{
  srand(analogRead(0)*millis());
  BigNumber randNum = BigNumber(rand());
  BigNumber sign = BigNumber(rand()%2? (int)1 : (int)-1);
  BigNumber x = (sign * randNum.pow(2)) % n;

  /*DEBUG
  Serial.print("randNum: ");
  printBN(randNum);
  Serial.print("sign: ");
  printBN(sign);
  Serial.print("x: ");
  printBN(x);
  //END DEBUG*/

  printBN(x);

  if(getInput() != FFS_AS)
    return -1;

  /*DEBUG
  Serial.println("im still here:)");
  //END DEBUG*/
  String strAs = getInput();
  if(strAs.length() != VECTOR_LENGTH)
    return -1;
  /*DEBUG
  Serial.print("as: ");
  Serial.println(strAs);
  //END DEBUG*/
  if(getInput() != FFS_Y)
    return -1;
  BigNumber y = BigNumber(randNum);
  BigNumber ymodn = NULL;
  for(int i = 0; i < VECTOR_LENGTH; ++i)
  {
    y *= secrets[i].pow(BigNumber(String(strAs.c_str()[i]).c_str()));
  }
  ymodn = y % n;
  printBN(ymodn);
  return 1;
  /*DEBUG
  Serial.print("y: ");
  printBN(y);
  //END DEBUG*/
}
